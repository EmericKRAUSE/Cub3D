!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/nidionis/Cub3D/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
cast_ray	src/ray_casting/ray_casting.c	/^static void	cast_ray(t_game *game, float ray_angle, int i)$/;"	f	typeref:typename:void	file:
clean_exit	src/exit/clean_exit.c	/^void clean_exit(t_game *game, char *msg, int exit_code)$/;"	f	typeref:typename:void
clean_get_next_line	src/exit/clean_exit.c	/^void    clean_get_next_line(t_game *game)$/;"	f	typeref:typename:void
clean_lines	src/get_next_line.c	/^char	*clean_lines(char **next_line, char **buff)$/;"	f	typeref:typename:char *
display_3d_map	src/display_map/display_3d_map.c	/^void display_3d_map(t_game *game)$/;"	f	typeref:typename:void
display_map	src/display_map/display_map.c	/^void	display_map(t_game *game)$/;"	f	typeref:typename:void
draw_rectangle	src/display_map/display_3d_map.c	/^void	draw_rectangle(mlx_image_t *img, uint32_t color)$/;"	f	typeref:typename:void
draw_square	src/display_map/display_map.c	/^static void	draw_square(t_game *game, mlx_image_t *img,$/;"	f	typeref:typename:void	file:
draw_square	src/main.c	/^void draw_square(t_game game, mlx_image_t *img, uint32_t color, int x_position, int y_position)$/;"	f	typeref:typename:void
draw_tile	src/display_map/display_map.c	/^void	draw_tile(t_game *game, char tile, int x, int y)$/;"	f	typeref:typename:void
dup_tab	src/map_utils/map_utils.c	/^char **dup_tab(char **tab)$/;"	f	typeref:typename:char **
find_horizontal_inter	src/ray_casting/ray_casting.c	/^float	find_horizontal_inter(t_game *game, float angle)$/;"	f	typeref:typename:float
find_vertical_inter	src/ray_casting/ray_casting.c	/^float find_vertical_inter(t_game *game, float angle)$/;"	f	typeref:typename:float
floodfill	src/parsing/import_cub_fixed.c	/^int floodfill(char **map, int y, int x)$/;"	f	typeref:typename:int
free_and_get_line	src/parsing/import_cub_fixed.c	/^char	*free_and_get_line(char	*line, int fd)$/;"	f	typeref:typename:char *
free_tab	src/parsing/parsing_nico_fixed.c	/^void	free_tab(char **map)$/;"	f	typeref:typename:void
ft_error	src/exit/clean_exit.c	/^int ft_error(const char *msg, int exit_code)$/;"	f	typeref:typename:int
ft_square_map	src/parsing/load_ft_fixed.c	/^void ft_square_map(t_game *game, char c)$/;"	f	typeref:typename:void
get_color	src/parsing/get_textures_and_colors.c	/^int	get_color(t_game *game, char *line)$/;"	f	typeref:typename:int
get_map	src/parsing/map_parser_fixed.c	/^char	**get_map(t_game *game, int fd, char **line_addr)$/;"	f	typeref:typename:char **
get_next_line	src/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_next_line_tester	src/main.c	/^int get_next_line_tester(char *filename)$/;"	f	typeref:typename:int
get_player_position	src/parsing/import_cub_fixed.c	/^t_point get_player_position(char **map)$/;"	f	typeref:typename:t_point
get_rgb	src/parsing/get_textures_and_colors.c	/^t_rgb	*get_rgb(t_game *game, char *line, t_rgb *rgb)$/;"	f	typeref:typename:t_rgb *
get_texture	src/parsing/get_textures_and_colors.c	/^int	get_texture(t_game *game, char *line)$/;"	f	typeref:typename:int
get_texture_ind_from_balise	src/parsing/get_textures_and_colors.c	/^int	get_texture_ind_from_balise(char *balise)$/;"	f	typeref:typename:int
import_cub_file	src/parsing/import_cub_fixed.c	/^int	import_cub_file(t_game *game)$/;"	f	typeref:typename:int
init_color	src/main.c	/^t_rgb init_color(int r, int g, int b)$/;"	f	typeref:typename:t_rgb
init_game	src/main.c	/^void init_game(t_game *game)$/;"	f	typeref:typename:void
invalid_line	src/parsing/load_ft_fixed.c	/^void	invalid_line(t_game *game, char *line)$/;"	f	typeref:typename:void
is_blank_line	src/parsing/line_types_fixed.c	/^int	is_blank_line(char *line)$/;"	f	typeref:typename:int
is_color	src/parsing/line_types_fixed.c	/^int	is_color(char *line)$/;"	f	typeref:typename:int
is_cub_file	src/parsing/import_cub_fixed.c	/^int	is_cub_file(char *filename)$/;"	f	typeref:typename:int
is_map	src/parsing/line_types_fixed.c	/^int	is_map(char *line)$/;"	f	typeref:typename:int
is_map_available	src/parsing/import_cub_fixed.c	/^int is_map_available(t_game *game)$/;"	f	typeref:typename:int
is_map_closed	src/parsing/import_cub_fixed.c	/^int is_map_closed(char **map)$/;"	f	typeref:typename:int
is_out_of_bounds	src/parsing/import_cub_fixed.c	/^int is_out_of_bounds(char **map, int y, int x)$/;"	f	typeref:typename:int
is_out_of_map	src/ray_casting/ray_casting.c	/^static int	is_out_of_map(t_game *game, float pos_x, float pos_y)$/;"	f	typeref:typename:int	file:
is_rgb	src/parsing/line_types_fixed.c	/^int	is_rgb(char *str)$/;"	f	typeref:typename:int
is_texture	src/parsing/line_types_fixed.c	/^int	is_texture(t_game *game, char *line)$/;"	f	typeref:typename:int
is_wall_hit	src/ray_casting/ray_casting.c	/^static int	is_wall_hit(t_game *game, float pos_x, float pos_y)$/;"	f	typeref:typename:int	file:
load_map	src/parsing/load_ft_fixed.c	/^char	*load_map(t_game *game, char *line)$/;"	f	typeref:typename:char *
load_texture	src/parsing/load_ft_fixed.c	/^int	load_texture(t_game *game, int ind, char *line)$/;"	f	typeref:typename:int
load_until_line	src/get_next_line.c	/^char	*load_until_line(int fd, char **buff)$/;"	f	typeref:typename:char *
main	src/main.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
move_player	src/move/move.c	/^void	move_player(t_game *game, float *new_x, float *new_y)$/;"	f	typeref:typename:void
movements	src/move/move.c	/^void	movements(void *param)$/;"	f	typeref:typename:void
one_player_only	src/parsing/import_cub_fixed.c	/^int one_player_only(char **map)$/;"	f	typeref:typename:int
open_file	src/parsing/parsing_nico_fixed.c	/^int	open_file(t_game *game, char *filename)$/;"	f	typeref:typename:int
param_missing	src/parsing/import_cub_fixed.c	/^int param_missing(t_game *game)$/;"	f	typeref:typename:int
param_missing_but_map	src/parsing/import_cub_fixed.c	/^int param_missing_but_map(t_game *game)$/;"	f	typeref:typename:int
parse_args	src/parsing/parsing_nico_fixed.c	/^int	parse_args(int argc, char **argv, t_game *game)$/;"	f	typeref:typename:int
pop_line	src/get_next_line.c	/^char	*pop_line(char *buff)$/;"	f	typeref:typename:char *
print_game	src/debug/print_tab.c	/^void	print_game(t_game *game)$/;"	f	typeref:typename:void
print_tab	src/debug/print_tab.c	/^void print_tab(char **tab)$/;"	f	typeref:typename:void
process_line	src/parsing/import_cub_fixed.c	/^void	process_line(t_game *game, char **line)$/;"	f	typeref:typename:void
ray_casting	src/ray_casting/ray_casting.c	/^void	ray_casting(t_game *game)$/;"	f	typeref:typename:void
read_file	src/main.c	/^int	read_file(const char *filename)$/;"	f	typeref:typename:int
rotate_player	src/move/move.c	/^void	rotate_player(t_game *game)$/;"	f	typeref:typename:void
set_map_point	src/map_utils/map_utils.c	/^void    set_map_point(char **map, t_point pt, char c)$/;"	f	typeref:typename:void
set_point	src/display_map/display_map.c	/^static void	set_point(t_point *point, int x, int y)$/;"	f	typeref:typename:void	file:
set_width_and_lenght	src/parsing/load_ft_fixed.c	/^void set_width_and_lenght(t_game *game)$/;"	f	typeref:typename:void
smallest_blank_gap_at_left_side	src/parsing/load_ft_fixed.c	/^int smallest_blank_gap_at_left_side(char **map)$/;"	f	typeref:typename:int
square_malloc	src/parsing/load_ft_fixed.c	/^char **square_malloc(int width, int height)$/;"	f	typeref:typename:char **
strip_map	src/parsing/load_ft_fixed.c	/^void    strip_map(char ***map_addr)$/;"	f	typeref:typename:void
trim_map	src/parsing/load_ft_fixed.c	/^void trim_map(char ***map_addr)$/;"	f	typeref:typename:void
update_ray	src/ray_casting/update_ray.c	/^void	update_ray(void *param)$/;"	f	typeref:typename:void
